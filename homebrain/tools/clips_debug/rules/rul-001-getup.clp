(defrule rul-001-getup
    ?sct <- (object (is-a SceneContext)
         (where room1) (target getup) (action ?action)
         (services $?svrs)
    )
    ?light2 <- (object (is-a oic.d.light)
        (ID ?did2 &:(eq ?did2 ins-00a17a88-a01a-03aa-0aa4))
        (value ?val2 ?val2-old)
    )
    ?light3 <- (object (is-a oic.d.light)
        (ID ?did3 &:(eq ?did3 ins-00a17a88-a01a-03a6-4a67))
        (value ?val3 ?val3-old)
    )
  =>
    (bind ?c (create-rule-context rul-001-getup))
    (logi "scene getup, action: " ?action)
    (if (eq ?action exit)
     then
        (foreach ?sname (create$ $?svrs)
            (logd "stop service: " ?sname)
            (assert (stop-service ?sname))
        )
        (return)
    )
    (if (eq ?action enter)
     then
        (bind ?count 8)
        (bind ?timems 8000)
        (bind ?tct 360)
        (if (= ?val2 0)
         then
            (send ?c act-control ?did2 value 1)
        )
        (if (= ?val3 0)
         then
            (send ?c act-control ?did3 value 1)
        )
        (send ?c act-control ?did2 ct ?tct)
        (send ?c act-control ?did3 ct ?tct)
        (assert (start-service ?sct gradlight-up:2 ?did2 ?count ?timems))
        (assert (start-service ?sct gradlight-up:3 ?did3 ?count ?timems))
        (return)
    )
    (bind ?s2 (member$ gradlight-up:2 $?svrs))
    (bind ?s3 (member$ gradlight-up:3 $?svrs))
    (if (and (eq ?s2 FALSE) (eq ?s3 FALSE))
     then
        (bind ?envsonsor ins-00124b00-12cc-8000-d0d0)
        (bind ?ill 35)
        (bind ?step 10)
        (assert (start-service ?sct autolight:2 ?envsonsor ?did2 ?ill ?step))
        (assert (start-service ?sct autolight:3 ?envsonsor ?did3 ?ill ?step))
    )
)
